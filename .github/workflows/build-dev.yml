name: Build APK (Development)

on:
  push:
    branches: [ master, develop, build ]
    paths:
      - 'TMessagesProj/**'
      - 'TMessagesProj_App/**'
      - 'TMessagesProj_AppStandalone/**'
      - 'TMessagesProj_AppHuawei/**'
      - 'build.gradle'
      - 'Dockerfile'
      - '.github/workflows/**'
  pull_request:
    branches: [ master ]
    paths:
      - 'TMessagesProj/**'
      - 'TMessagesProj_App/**'
      - 'TMessagesProj_AppStandalone/**'
      - 'TMessagesProj_AppHuawei/**'
      - 'build.gradle'
      - 'Dockerfile'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        run: |
          docker build -t telegram-build .

      - name: Build APKs and Bundles
        run: |
          docker run --rm -v "$PWD":/home/source telegram-build

      - name: List built files
        run: |
          echo "Built APK files:"
          find TMessagesProj/build/outputs/apk -name "*.apk" -type f || echo "No APK files found"
          echo "Built Bundle files:"
          find TMessagesProj/build/outputs/bundle -name "*.aab" -type f || echo "No Bundle files found"

      - name: Upload APK artifacts
        uses: actions/upload-artifact@v3
        with:
          name: apk-files-${{ github.sha }}
          path: |
            TMessagesProj/build/outputs/apk/**/*.apk
          retention-days: 7

      - name: Upload Bundle artifacts
        uses: actions/upload-artifact@v3
        with:
          name: bundle-files-${{ github.sha }}
          path: |
            TMessagesProj/build/outputs/bundle/**/*.aab
          retention-days: 7

      - name: Generate build summary
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "### Built APK Files" >> $GITHUB_STEP_SUMMARY
          if find TMessagesProj/build/outputs/apk -name "*.apk" -type f > /dev/null 2>&1; then
            find TMessagesProj/build/outputs/apk -name "*.apk" -type f -exec basename {} \; | while read file; do
              echo "- $file" >> $GITHUB_STEP_SUMMARY
            done
          else
            echo "- No APK files found" >> $GITHUB_STEP_SUMMARY
          fi

          echo "### Built Bundle Files" >> $GITHUB_STEP_SUMMARY
          if find TMessagesProj/build/outputs/bundle -name "*.aab" -type f > /dev/null 2>&1; then
            find TMessagesProj/build/outputs/bundle -name "*.aab" -type f -exec basename {} \; | while read file; do
              echo "- $file" >> $GITHUB_STEP_SUMMARY
            done
          else
            echo "- No Bundle files found" >> $GITHUB_STEP_SUMMARY
          fi

          echo "### Commit Information" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${GITHUB_SHA:0:8}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${GITHUB_REF#refs/heads/}" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Date**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
